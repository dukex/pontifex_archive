// Mocks generated by Mockito 5.4.4 from annotations
// in pontifex_archive/test/features/home/domain/usecases/get_popes_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:pontifex_archive/core/data/models/pope.dart' as _i4;
import 'package:pontifex_archive/core/data/repositories/pope_repository.dart'
    as _i2;
import 'package:pontifex_archive/core/data/repositories/preferences_repository.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PopeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopeRepository extends _i1.Mock implements _i2.PopeRepository {
  MockPopeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Pope>> getPopes() => (super.noSuchMethod(
        Invocation.method(
          #getPopes,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Pope>>.value(<_i4.Pope>[]),
      ) as _i3.Future<List<_i4.Pope>>);
}

/// A class which mocks [PreferencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesRepository extends _i1.Mock
    implements _i5.PreferencesRepository {
  MockPreferencesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> saveReadingProgress(
    String? id,
    String? position,
    double? progress,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveReadingProgress,
          [
            id,
            position,
            progress,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String> getPosition(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getPosition,
          [id],
        ),
        returnValue: _i3.Future<String>.value(_i6.dummyValue<String>(
          this,
          Invocation.method(
            #getPosition,
            [id],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<double> getProgress(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getProgress,
          [id],
        ),
        returnValue: _i3.Future<double>.value(0.0),
      ) as _i3.Future<double>);
}
