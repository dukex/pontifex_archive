name: Release
on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Test, build and release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Flutter version
        run: flutter --version
      - run: cd app && flutter test

  android:
    needs: [build]
    name: Android
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/app/fastlane/Gemfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Flutter version
        run: flutter --version
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      - name: Download pub dependencies
        run: cd app && flutter pub get
      - name: Run build_runner
        run: cd app && flutter pub run build_runner build --delete-conflicting-outputs
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > app/android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> app/android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> app/android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> app/android/key.properties
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - name: Release to Google Play (alpha)
        env:
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          cd app/fastlane && bundle exec fastlane deploy

  android-beta:
    needs: [android]
    name: Android Beta
    runs-on: ubuntu-latest
    environment: android-beta
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/app/fastlane/Gemfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - name: Release to Google Play (beta)
        env:
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          cd app/fastlane && bundle exec fastlane promote_to_beta

  android-production:
    needs: [android-beta]
    name: Android Production
    runs-on: ubuntu-latest
    environment: android-production
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/app/fastlane/Gemfile
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
      - name: Release to Google Play (production)
        env:
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          cd app/fastlane && bundle exec fastlane promote_to_production

  web:
    environment:
      name: web
      url: ${{ steps.deployment.outputs.page_url }}
    needs: [build]
    name: Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Flutter version
        run: flutter --version
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      - name: Download pub dependencies
        run: cd app && flutter pub get
      - name: Run build_runner
        run: cd app && flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build
        run: cd app && flutter build web --release -t lib/web/main.dart
      - name: Move API
        run: cp -r api app/build/web/api
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./app/build/web"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  linux:
    needs: [build]
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v2
      - name: Use Snapcraft
        run: snapcraft --help
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: app/pubspec.yaml
      - name: Flutter version
        run: flutter --version
      - name: Cache pub dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      - name: Download pub dependencies
        run: cd app && flutter pub get
      - name: Run build_runner
        run: cd app && flutter pub run build_runner build --delete-conflicting-outputs
      - name: Build
        run: cd app && flutter build linux --release